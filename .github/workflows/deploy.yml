name: Multi-platform Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: darwin
          - os: windows-latest
            platform: windows

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Get version info
      id: version
      run: |
        echo "VERSION=$(git describe --tags --always --dirty)" >> $GITHUB_OUTPUT
        echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build
      env:
        GOOS: ${{ matrix.platform }}
        GOARCH: amd64
      run: |
        go build -ldflags="-X main.Version=${{ steps.version.outputs.VERSION }} -X main.Commit=${{ steps.version.outputs.COMMIT }}" -o go-fiber-api-${{ matrix.platform }}-amd64 ./cmd/server

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: go-fiber-api-${{ matrix.platform }}-amd64-${{ steps.version.outputs.VERSION }}-${{ steps.version.outputs.COMMIT }}
        path: go-fiber-api-${{ matrix.platform }}-amd64
        compression-level: 9

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get version info
      id: version
      run: |
        echo "VERSION=$(git describe --tags --always --dirty)" >> $GITHUB_OUTPUT
        echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          your-dockerhub-username/go-fiber-api:latest
          your-dockerhub-username/go-fiber-api:${{ steps.version.outputs.VERSION }}
        build-args: |
          VERSION=${{ steps.version.outputs.VERSION }}
          COMMIT=${{ steps.version.outputs.COMMIT }}
